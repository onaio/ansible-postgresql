---
- name: Make sure the PostgreSQL group exists
  group:
    name: "{{ postgresql_service_group }}"
    state: present

- name: Make sure the PostgreSQL user exists
  user:
    name: "{{ postgresql_service_user }}"
    group: "{{ postgresql_service_group }}"
    home: "{{ postgresql_home }}"
    shell: "{{ postgresql_shell }}"
    state: present

- include_role:
    name: onaio.ssl-certificate
  vars:
    certificate_authority_key: "{{ postgresql_ssl_ca_key }}"
    certificate_authority_cert: "{{  postgresql_ssl_ca_cert }}"
    certificates_directory: "{{ postgresql_ssl_directory }}"
    certificate_authority_key_filename: "{{ postgresql_ssl_ca_key_filename }}"
    certificate_authority_cert_filename: "{{ postgresql_ssl_ca_cert_filename }}"
    client_key_filename: "{{ postgresql_ssl_server_key_filename }}"
    client_csr_filename: "{{ postgresql_ssl_server_csr_filename }}"
    client_cert_filename: "{{ postgresql_ssl_server_cert_filename }}"
    certificate_expiry_days: "{{ postgresql_ssl_server_cert_expiry_days }}"
    certificate_attributes: "{{ postgresql_ssl_server_cert_subject }}"
    certificates_system_owner: "{{ postgresql_service_user }}"
    certificates_system_group: "{{ postgresql_service_group }}"
    certificates_file_mode: 0700
  when: postgresql_enable_ssl
  tags:
    - tls
    - postgresql_tls

- include_role:
    name: ANXS.postgresql

- name: Make sure the backup directory exists
  file:
    state: directory
    path: "{{ postgresql_backup_target_path }}"
    owner: "{{ postgresql_backup_system_user }}"
    group: "{{ postgresql_backup_system_group }}"
    mode: 0750
  when: postgresql_backup_enabled and postgresql_backup_target_protocol == "file"
  tags:
    - backup

- name: Make sure all users can view files inside the backup directory's parent
  file:
    path: "{{ postgresql_backup_target_path | dirname }}"
    mode: "a+x"
  when: postgresql_backup_enabled and postgresql_backup_target_protocol == "file"
  tags:
    - backup

- include_role:
    name: onaio.gpg-import
  vars:
    gpg_user: "{{ postgresql_backup_system_user }}"
    gpg_group: "{{ postgresql_backup_system_group }}"
    gpg_private_key: "{{ postgresql_backup_gpg_private_key }}"
    gpg_private_key_passphrase: "{{ postgresql_backup_gpg_pass }}"
    gpg_public_key: "{{ postgresql_backup_gpg_public_key }}"
    gpg_trust_file: "{{ postgresql_backup_gpg_trust_file }}"
    gpg_home: "{{ postgresql_user_home }}"
  when: postgresql_backup_enabled and postgresql_backup_import_gpg_keys
  tags:
    - backup

- include_role:
    name: onaio.backup
  vars:
    backup_cron_filename: "{{ postgresql_backup_cron_filename }}"
    backup_enabled: "{{ postgresql_backup_enabled }}"
    backup_profiles: "{{ postgresql_backup_profiles }}"
    backup_target_user: "{{ postgresql_backup_target_user }}"
    backup_target_pass: "{{ postgresql_backup_target_pass }}"
  when: postgresql_backup_enabled
  tags:
    - backup
