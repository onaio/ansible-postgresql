---
postgresql_user_home: "/var/lib/postgresql"

postgresql_backup_enabled: true

# GPG Import
# Need setting
postgresql_backup_gpg_private_key:
postgresql_backup_gpg_public_key:
postgresql_backup_gpg_trust_file:
# Don't need setting
postgresql_backup_system_user: "postgres"
postgresql_backup_system_group: "postgres"
postgresql_backup_import_gpg_keys: true
postgres_backup_gpg_opts: "--pinentry-mode loopback"

# Backup
# Need setting
postgresql_backup_database:
postgresql_backup_gpg_key_id:
postgresql_backup_gpg_pass:
# When using S3, the user is the Access key ID and pass is the Secret
postgresql_backup_target_user:
postgresql_backup_target_pass:
# Don't need setting
# postgresql_backup_target_protocol can be 'file', 'ftp' and all
# other protocols supported by https://github.com/onaio/ansible-backup
postgresql_backup_target_protocol: "file"
postgresql_backup_target_path: "/backups/postgresql"
postgresql_backup_cron_filename: backup_postgresql
postgresql_backup_profiles:
  - name: "{{ postgresql_backup_database }}"
    schedule: 0 1 * * *
    source: "postgresql://{{ postgresql_backup_database }}"
    target: "{{ postgresql_backup_target }}"
    max_age: "1M" # Time frame for old backups to keep.
    full_max_age: "1W" # forces a full backup if last full backup reaches a specified age
    max_full_backups: 4 # Number of full backups to keep.
    user: "{{ postgresql_backup_system_user }}"
    gpg_key: "{{ postgresql_backup_gpg_key_id }}"
    gpg_pw: "{{ postgresql_backup_gpg_pass }}"
    gpg_opts: "{{ postgres_backup_gpg_opts }}"
    gpg_private_key_src: "{{ postgresql_backup_gpg_private_key }}"
    gpg_public_key_src: "{{ postgresql_backup_gpg_public_key }}"
